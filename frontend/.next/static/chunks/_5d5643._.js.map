{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ghane/Downloads/Project_Swogyan_Send/Project_Swogyan_Send/frontend/components/ProductCard.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useWeb3 } from \"@/contexts/Web3Context\";\r\nimport { ethers } from \"ethers\";\r\nimport Image from \"next/image\";\r\n\r\ninterface ProductCardProps {\r\n  product: {\r\n    id: number;\r\n    name: string;\r\n    price: ethers.BigNumber;\r\n    tokenId: number;\r\n    isAvailable: boolean;\r\n    images: string[];\r\n    sellerAddress: string;\r\n  };\r\n}\r\n\r\nexport default function ProductCard({ product }: ProductCardProps) {\r\n  const { contract } = useWeb3();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handlePurchase = async () => {\r\n    if (!contract) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const tx = await contract.buyItem(product.sellerAddress, product.id, {\r\n        value: product.price,\r\n        gasLimit: 200000,\r\n      });\r\n      await tx.wait();\r\n      alert(\"Purchase successful!\");\r\n    } catch (error: any) {\r\n      console.error(\"Error purchasing item:\", error);\r\n      alert(`Error purchasing item: ${error.message || \"Unknown error\"}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow overflow-hidden\">\r\n      <div className=\"relative h-48\">\r\n        {product.images.length > 0 ? (\r\n          <Image\r\n            src={product.images[0]}\r\n            alt={product.name}\r\n            fill\r\n            className=\"object-cover\"\r\n          />\r\n        ) : (\r\n          <div className=\"w-full h-full bg-gray-200 flex items-center justify-center\">\r\n            No Image\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"p-4\">\r\n        <h3 className=\"text-lg font-semibold mb-2\">{product.name}</h3>\r\n        <p className=\"text-gray-600 mb-2\">\r\n          Price: {ethers.formatUnits(product.price, \"gwei\")} GWEI\r\n        </p>\r\n        <p className=\"text-gray-600 mb-4\">\r\n          Token ID: {product.tokenId.toString()}\r\n        </p>\r\n        <button\r\n          onClick={handlePurchase}\r\n          disabled={loading || !product.isAvailable}\r\n          className=\"w-full bg-luxury-black text-white px-4 py-2 rounded-full disabled:opacity-50\"\r\n        >\r\n          {loading\r\n            ? \"Processing...\"\r\n            : !product.isAvailable\r\n            ? \"Not Available\"\r\n            : \"Buy Now\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AADA;;;AAJA;;;;;AAmBe,SAAS,YAAY,EAAE,OAAO,EAAoB;;IAC/D,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,UAAO,AAAD;IAC3B,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,iBAAiB;QACrB,IAAI,CAAC,UAAU;QAEf,IAAI;YACF,WAAW;YACX,MAAM,KAAK,MAAM,SAAS,OAAO,CAAC,QAAQ,aAAa,EAAE,QAAQ,EAAE,EAAE;gBACnE,OAAO,QAAQ,KAAK;gBACpB,UAAU;YACZ;YACA,MAAM,GAAG,IAAI;YACb,MAAM;QACR,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,0BAA0B;YACxC,MAAM,CAAC,uBAAuB,EAAE,MAAM,OAAO,IAAI,iBAAiB;QACpE,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACZ,QAAQ,MAAM,CAAC,MAAM,GAAG,kBACvB,6LAAC,gIAAA,CAAA,UAAK;oBACJ,KAAK,QAAQ,MAAM,CAAC,EAAE;oBACtB,KAAK,QAAQ,IAAI;oBACjB,IAAI;oBACJ,WAAU;;;;;yCAGZ,6LAAC;oBAAI,WAAU;8BAA6D;;;;;;;;;;;0BAKhF,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAA8B,QAAQ,IAAI;;;;;;kCACxD,6LAAC;wBAAE,WAAU;;4BAAqB;4BACxB,mLAAA,CAAA,SAAM,CAAC,WAAW,CAAC,QAAQ,KAAK,EAAE;4BAAQ;;;;;;;kCAEpD,6LAAC;wBAAE,WAAU;;4BAAqB;4BACrB,QAAQ,OAAO,CAAC,QAAQ;;;;;;;kCAErC,6LAAC;wBACC,SAAS;wBACT,UAAU,WAAW,CAAC,QAAQ,WAAW;wBACzC,WAAU;kCAET,UACG,kBACA,CAAC,QAAQ,WAAW,GACpB,kBACA;;;;;;;;;;;;;;;;;;AAKd;GA7DwB;;QACD,2HAAA,CAAA,UAAO;;;KADN"}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ghane/Downloads/Project_Swogyan_Send/Project_Swogyan_Send/frontend/app/buyers/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useWeb3 } from \"@/contexts/Web3Context\";\r\nimport { ethers } from \"ethers\";\r\nimport ProductCard from \"@/components/ProductCard\";\r\n\r\nexport default function BuyersPage() {\r\n  const { isConnected, contract } = useWeb3();\r\n  const [sellerAddress, setSellerAddress] = useState(\"\");\r\n  const [products, setProducts] = useState<any[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchProducts = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!contract || !sellerAddress) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const result = await contract.getAllItemsBySellers(sellerAddress);\r\n      const [names, prices, contractAddress, tokenIds, itemIds, availability] =\r\n        result;\r\n\r\n      const productsData = await Promise.all(\r\n        names.map(async (name: string, index: number) => {\r\n          const imageLinks = await contract.getImageDisplayLinks(\r\n            sellerAddress,\r\n            itemIds[index]\r\n          );\r\n          return {\r\n            id: itemIds[index],\r\n            name,\r\n            price: prices[index],\r\n            tokenId: tokenIds[index],\r\n            isAvailable: availability[index],\r\n            images: imageLinks,\r\n            sellerAddress,\r\n            contractAddress,\r\n          };\r\n        })\r\n      );\r\n\r\n      setProducts(productsData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching products:\", error);\r\n      alert(\"Error fetching products\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchItemIds = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!contract || !sellerAddress) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const result = await contract.getAllItemIdsBySeller(sellerAddress);\r\n      console.log(result);\r\n    } catch (error) {\r\n      console.error(\"Error fetching products:\", error);\r\n      alert(\"Error fetching products\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (!isConnected) {\r\n    return (\r\n      <div className=\"min-h-screen pt-24 px-4\">\r\n        <div className=\"max-w-4xl mx-auto\">\r\n          <div className=\"p-8 bg-white rounded-lg shadow\">\r\n            <p className=\"text-center text-lg\">\r\n              Please connect your wallet first.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen pt-24 px-4\">\r\n      <div className=\"max-w-6xl mx-auto\">\r\n        <h1 className=\"text-3xl font-bold mb-8\">Browse Products</h1>\r\n\r\n        <div className=\"mb-8 p-6 bg-white rounded-lg shadow\">\r\n          <form onSubmit={fetchItemIds} className=\"flex gap-4\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter seller address\"\r\n              value={sellerAddress}\r\n              onChange={(e) => setSellerAddress(e.target.value)}\r\n              className=\"flex-1 p-2 border rounded\"\r\n              required\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              className=\"bg-luxury-black text-white px-6 py-2 rounded-full disabled:opacity-50\"\r\n            >\r\n              {loading ? \"Loading...\" : \"Search\"}\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {products.map((product) => (\r\n            <ProductCard\r\n              key={`${product.sellerAddress}-${product.id}`}\r\n              product={product}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;;;AALA;;;;AAOe,SAAS;;IACtB,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,UAAO,AAAD;IACxC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,gBAAgB,OAAO;QAC3B,EAAE,cAAc;QAChB,IAAI,CAAC,YAAY,CAAC,eAAe;QAEjC,IAAI;YACF,WAAW;YACX,MAAM,SAAS,MAAM,SAAS,oBAAoB,CAAC;YACnD,MAAM,CAAC,OAAO,QAAQ,iBAAiB,UAAU,SAAS,aAAa,GACrE;YAEF,MAAM,eAAe,MAAM,QAAQ,GAAG,CACpC,MAAM,GAAG,CAAC,OAAO,MAAc;gBAC7B,MAAM,aAAa,MAAM,SAAS,oBAAoB,CACpD,eACA,OAAO,CAAC,MAAM;gBAEhB,OAAO;oBACL,IAAI,OAAO,CAAC,MAAM;oBAClB;oBACA,OAAO,MAAM,CAAC,MAAM;oBACpB,SAAS,QAAQ,CAAC,MAAM;oBACxB,aAAa,YAAY,CAAC,MAAM;oBAChC,QAAQ;oBACR;oBACA;gBACF;YACF;YAGF,YAAY;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,MAAM;QACR,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,IAAI,CAAC,YAAY,CAAC,eAAe;QAEjC,IAAI;YACF,WAAW;YACX,MAAM,SAAS,MAAM,SAAS,qBAAqB,CAAC;YACpD,QAAQ,GAAG,CAAC;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,MAAM;QACR,SAAU;YACR,WAAW;QACb;IACF;IAEA,IAAI,CAAC,aAAa;QAChB,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAE,WAAU;kCAAsB;;;;;;;;;;;;;;;;;;;;;IAO7C;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAA0B;;;;;;8BAExC,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAK,UAAU;wBAAc,WAAU;;0CACtC,6LAAC;gCACC,MAAK;gCACL,aAAY;gCACZ,OAAO;gCACP,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,KAAK;gCAChD,WAAU;gCACV,QAAQ;;;;;;0CAEV,6LAAC;gCACC,MAAK;gCACL,UAAU;gCACV,WAAU;0CAET,UAAU,eAAe;;;;;;;;;;;;;;;;;8BAKhC,6LAAC;oBAAI,WAAU;8BACZ,SAAS,GAAG,CAAC,CAAC,wBACb,6LAAC,6HAAA,CAAA,UAAW;4BAEV,SAAS;2BADJ,GAAG,QAAQ,aAAa,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE;;;;;;;;;;;;;;;;;;;;;AAQ3D;GA9GwB;;QACY,2HAAA,CAAA,UAAO;;;KADnB"}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}